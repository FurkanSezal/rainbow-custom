import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import { getContract, parseEther } from "viem";
import { abi } from "../comp/abi";
import { Web3Button } from "@web3modal/react";
import { useWeb3Modal } from "@web3modal/react";
import { ConnectButton } from "@rainbow-me/rainbowkit";

import {
  usePublicClient,
  useWalletClient,
  useAccount,
  useNetwork,
} from "wagmi";
import { Header } from "../comp/Header";
import { useState } from "react";

export default function Home() {
  const walletClient = useWalletClient();
  const publicClient = usePublicClient();
  const { address, isConnecting, isDisconnected } = useAccount();

  const [sig, setSig] = useState();

  const { open, close } = useWeb3Modal();

  async function handleClick() {
    const signature = await walletClient.data.signTypedData({
      account: address,
      domain: {
        name: "Ether Mail",
        version: "1",
        chainId: 97,
        verifyingContract: "0x0000000000000000000000000000000000000000",
      },
      types: {
        EIP712Domain: [
          {
            name: "name",
            type: "string",
          },
          {
            name: "version",
            type: "string",
          },
          {
            name: "chainId",
            type: "uint256",
          },
          {
            name: "verifyingContract",
            type: "address",
          },
        ],
        Person: [
          { name: "name", type: "string" },
          { name: "wallet", type: "address" },
        ],
        Mail: [
          { name: "from", type: "Person" },
          { name: "to", type: "Person" },
          { name: "contents", type: "string" },
        ],
      },
      primaryType: "Mail",
      message: {
        from: {
          name: "Cow",
          wallet: "0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826",
        },
        to: {
          name: "Bob",
          wallet: "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB",
        },
        contents: "Hello, Bob!",
      },
    });

    console.log(signature);
    setSig(signature);

    /*   const blockNumber = await publicClient.getBlockNumber();
    console.log(blockNumber); */
  }

  return (
    <>
      {/*   <div>
        <Web3Button></Web3Button>
      </div> */}
      <div>
        <ConnectButton></ConnectButton>
      </div>
      <button onClick={() => open()}>Connect</button>
      {/*   <Header></Header> */}
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <button onClick={handleClick}>Hello</button>
      <div>{sig}</div>
    </>
  );
}
